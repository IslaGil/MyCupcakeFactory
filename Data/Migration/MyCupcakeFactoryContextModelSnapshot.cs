// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCupcakeFactory.Data;

namespace MyCupcakeFactory.Data.Migradion
{
    [DbContext(typeof(MyCupcakeFactoryContext))]
    partial class MyCupcakeFactoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCupcakeFactory.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sabor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EndereçoId")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereço")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EndereçoId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Confeiteiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Confeiteiro");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Endereço", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Endereço");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Entregador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entregador");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfeiteiroId")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdConfeiteiro")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ConfeiteiroId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfeiteiroId")
                        .HasColumnType("int");

                    b.Property<int?>("EndereçoId")
                        .HasColumnType("int");

                    b.Property<int?>("EntregadorId")
                        .HasColumnType("int");

                    b.Property<string>("FormaDePagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdConfeiteiro")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereço")
                        .HasColumnType("int");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ConfeiteiroId");

                    b.HasIndex("EndereçoId");

                    b.HasIndex("EntregadorId");

                    b.HasIndex("ItemId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Cliente", b =>
                {
                    b.HasOne("MyCupcakeFactory.Models.Endereço", "Endereço")
                        .WithMany("Clientes")
                        .HasForeignKey("EndereçoId");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Item", b =>
                {
                    b.HasOne("MyCupcakeFactory.Models.Categoria", "Categoria")
                        .WithMany("Items")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("MyCupcakeFactory.Models.Confeiteiro", "Confeiteiro")
                        .WithMany("Items")
                        .HasForeignKey("ConfeiteiroId");
                });

            modelBuilder.Entity("MyCupcakeFactory.Models.Pedido", b =>
                {
                    b.HasOne("MyCupcakeFactory.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("MyCupcakeFactory.Models.Confeiteiro", "Confeiteiro")
                        .WithMany("Pedidos")
                        .HasForeignKey("ConfeiteiroId");

                    b.HasOne("MyCupcakeFactory.Models.Endereço", "Endereço")
                        .WithMany("Pedidos")
                        .HasForeignKey("EndereçoId");

                    b.HasOne("MyCupcakeFactory.Models.Entregador", "Entregador")
                        .WithMany("Pedidos")
                        .HasForeignKey("EntregadorId");

                    b.HasOne("MyCupcakeFactory.Models.Item", "Item")
                        .WithMany("Pedidos")
                        .HasForeignKey("ItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
